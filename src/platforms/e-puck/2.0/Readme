Specific to the e-puk2 mobile robot:

This platform use 2 STM32F4xx uCs
1. An STM32F413 to implement the low-level microcontroller,
   including BlackMagic Probe modified software with dedicated other features
   like the power management and USB HUB configuration.
2. An STM32F407 as main uC for the mobile robotic platform. This one is program-
   med from the first one.

System vs BMP Bootloader
========================
We use the STM32F413 internal DFU bootloader and there is no code to provide and
no control too except the Boot0 pin (see below).
=======
System vs BMP Bootloader
========================
For the BMP bootloader, flashing was not reliable. So we use the system
bootloder unconditional.

Connections:
====================

Boot0: Pin Boot0 to force system bootloader entry AFTER reset.
The e-puck2 must be OFF and the Boot0 jumper short-circuited then the USB must
be connected to a PC with DFU util tools in order to reprogram the BlackMagic
Probe firmware.

Not implemented yet but could be done later:
1. An eventual Black Magic UART Port: That's need an UART connection (2 pins)
between the 2 uCs and it will allow to implement a virtual UART console via USB
between the 407 and the USB host.
2. An eventual Black Magic Trace Capture: That's need 1 link between the 2 uCs
(SWO on the 407)

PA0: TDI - if needed but try to avoid to use it
PA10: TMS/SWDIO
PA5: TCK/SWCLK
PA1: TDO/TRACESWO - if needed but try to avoid to use it

PB4: TRST - if needed but try to avoid to use it
PB0: SRST

PA14/Blue Led: Indicator of serial activity

Bootstrapping the F4Discovery on-board ST-Link
==============================================
http://embdev.net/articles/STM_Discovery_as_Black_Magic_Probe has some hints
how to modify the F4Discovery on-board ST-Link.  If you try to do so and hit
a problem that stands some test like that you load the right firmware to the
right device via the right BMP probe, explain, report and ask on the
blackmagic mailing list http://sourceforge.net/mail/?group_id=407419.
